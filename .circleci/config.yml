version: 2.1

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  aws-s3: circleci/aws-s3@3.0
  aws-cli: circleci/aws-cli@5.4.1

jobs:
  run-checks:
    docker:
      - image: cimg/python:3.10.18
    resource_class: small

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1.1-deps-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install pipenv and dependencies
          command: |
            pip install pipenv
            pipenv install --dev

      - save_cache:
          key: v1.1-deps-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs

      - run:
          name: Unit tests
          command: |
            pipenv run pytest -vrrP --cov

      - run:
          name: Type checks
          command: |
             pipenv run mypy --follow-untyped-imports utilities

      - run:
          name: Python linting
          command: |
             pipenv run black . --check

      - run:
          name: Docstring linting
          command: |
            pipenv run pydoclint --style=google --quiet .

      - run:
          name: Dependency audit
          command: |
            pipenv run pip-audit 

      - run:
          name: Security check
          command: |
            pipenv run bandit -c bandit.yaml -r utilities
            

  lint-terraform:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.2.1
    resource_class: small
    steps:
      - checkout
      - run:
          name: Check terraform formatting
          command: terraform fmt -check -recursive -diff

  terraform-plan:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.2.1
    resource_class: small
    steps:
      - checkout
      - run:
          name: terraform plan
          command: |
            cd terraform
            terraform init -input=false
            terraform plan -out tfapply
      - store_artifacts:
          path: terraform/tfapply
      - persist_to_workspace:
          root: .
          paths:
            - terraform/tfapply
            - terraform/.*
            - .


  terraform-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.2.1
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - checkout
      - run:
          name: terraform apply
          command: |
            cd terraform
            terraform apply -auto-approve tfapply


workflows:
  version: 2
  plan-approve-and-deploy-to-main:
    unless: << pipeline.parameters.GHA_Action >>
    jobs:
      - lint-terraform:
          filters:
            branches:
              only: main
      - run-checks:
          requires:
            - lint-terraform
      - terraform-plan:
          requires:
            - lint-terraform
            - run-checks
      - plan-approval:
          type: approval
          requires:
            - terraform-plan
      - terraform-apply:
          requires:
            - plan-approval
  plan-and-deploy-to-dev:
    unless: << pipeline.parameters.GHA_Action >>
    jobs:
      - lint-terraform:
          filters:
            branches:
              ignore: main
      - run-checks:
          requires:
            - lint-terraform
      - terraform-plan:
          requires:
            - lint-terraform
            - run-checks
